import { client } from "../database";

client.connect();

const tableRoles = `
CREATE TABLE IF NOT EXISTS Roles (
    id_rol INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nombre_rol CHARACTER VARYING
);
`

const tablePersonas = `
CREATE TABLE IF NOT EXISTS Personas (
    id_persona INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nombre_persona CHARACTER VARYING,
    direccion_persona CHARACTER VARYING,
    email CHARACTER VARYING,
    fecha_registro_persona CHARACTER VARYING
);
`

const tableUsuarios = `
CREATE TABLE IF NOT EXISTS Usuarios (
    idUsuario INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    usuario CHARACTER VARYING,
    password CHARACTER VARYING,
    id_rol INTEGER,
    fecha_usuario CHARACTER VARYING,
    id_persona INTEGER,
    FOREIGN KEY (id_rol) REFERENCES Roles (id_rol)
            ON DELETE CASCADE
            ON UPDATE CASCADE,
    FOREIGN KEY (id_persona) REFERENCES Personas (id_persona)
        ON DELETE CASCADE
        ON UPDATE CASCADE
);
`
export const createTables = async() => {
    try {
        const res = await client.query(tableRoles);
        console.log("Table 'Roles' is successfully created");
    } catch (err) {
        console.log(err.stack);
    }
    
    try {
        const res = await client.query(tablePersonas);
        console.log("Table 'Personas' is successfully created");
    } catch (err) {
        console.log(err.stack);
    }

    try {
        const res = await client.query(tableUsuarios);
        console.log("Table 'Usuarios' is successfully created");
    } catch (err) {
        console.log(err.stack);
    }
}